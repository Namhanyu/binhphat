---
import Logo from "../atoms/logo/Logo.astro";
import MainButton from "./MainButton.astro";
import MenuItem from "./MenuItem.astro";
import SnsHeader from "./SnsHeader.astro";
import ActionButton from "./ActionButton.astro";

interface ActionButtonItem {
  component: string;
  subTitle: string;
  link: string;
}

interface MainButtonItem {
  title: string;
  subTitle: string;
  description: string;
  link: string;
  variant: string;
}

const { isRestaurant = false } = Astro.props;

const actionButtons = isRestaurant
  ? ([
      {
        component: "HeaderLogo",
        subTitle: "レストランのみのご予約",
        link: "/",
      },
      {
        component: "PalmSpringLogo",
        subTitle: "特設サイト",
        link: "/",
      },
    ] as ActionButtonItem[])
  : ([
      {
        title: "restaurant",
        subTitle: "レストランのみのご予約",
        description: "浜名湖の恵みを味わう四季折々の優しいフレンチ",
        link: "/restaurant",
        variant: "black",
      },
      {
        title: "wedding",
        subTitle: "特設サイト",
        description: "美食と絶景のオーベルジュウェディング",
        link: "/wedding",
        variant: "black",
      },
    ] as MainButtonItem[]);

const menu = isRestaurant
  ? [
      {
        title: "dinner course",
        subTitle: "ディナーコース",
        link: "/restaurant/dinner",
      },
      {
        title: "iwai",
        subTitle: "顔合わせ・結納プラン",
        link: "/restaurant/others#iwai",
      },
      {
        title: "lunch course",
        subTitle: "ランチコース",
        link: "/restaurant/lunch",
      },
      {
        title: "party plan",
        subTitle: "パーティプラン",
        link: "/restaurant/others#party-plan",
      },
      {
        title: "anniversaire course",
        subTitle: "アニバーサリーコース",
        link: "/restaurant/others#anniversaire-course",
      },
      {
        title: "tea pairing",
        subTitle: "ティーペアリング",
        link: "/restaurant/others#tea-pairing",
      },
      {
        title: "propose plan",
        subTitle: "プロポーズプラン",
        link: "/restaurant/others#propose-plan",
      },
    ]
  : [
      {
        title: "story",
        subTitle: "タイプの違う2つのコンセプトホテルで過ごす 浜名湖ものがたり",
        link: "/story",
      },
      {
        title: "food",
        subTitle: "お食事について",
        link: "/food",
      },
      {
        title: "room",
        subTitle: "お部屋について",
        link: "/room",
      },
      {
        title: "access",
        subTitle: "アクセス",
        link: "/access",
      },
      {
        title: "Q&A",
        subTitle: "よくある質問",
        link: "/faq",
      },
      {
        title: "facility",
        subTitle: "施設について",
        link: "/facility",
      },
    ];
---

<div
  id="menu"
  class="fixed inset-0 z-50 transition-transform duration-500 ease-in-out -translate-y-full bg-default h-[100vh] overflow-y-scroll md:overflow-y-hidden"
>
  <div class="items-center justify-center pt-10 pb-7 text-black hidden md:flex">
    <a href="/" class="text-black font-URWClassico">les quatre saisons</a>
  </div>
  <div
    class="flex items-center justify-end gap-8 w-full px-10 md:px-8 pt-[58px] md:pt-0"
  >
    <button
      class="text-black flex flex-col items-end gap-1 font-URWClassico w-[71px]"
      onclick="document.getElementById('menu').classList.add('-translate-y-full')"
    >
      <div
        class="group rounded-lg cursor-pointer transition-all duration-300 w-full"
      >
        <div
          class="relative flex flex-col items-start space-y-[11px] mb-[5px] h-[14px]"
        >
          <div
            class="absolute top-0 left-0 h-[1.5px] bg-black w-[71px] group-hover:w-12 transition-all duration-300 ease-in-out origin-left group-hover:rotate-45 group-hover:-top-[6px]"
          >
          </div>
          <div
            class="absolute top-1 left-0 h-[1.5px] bg-black w-[50px] group-hover:w-12 transition-all duration-300 ease-in-out origin-left group-hover:-rotate-45 group-hover:top-4"
          >
          </div>
        </div>
        <div
          class="text-black text-xl text-left group-hover:translate-y-3 group-hover:-translate-x-1 duration-300 ease-in-out mt-3"
        >
          close
        </div>
      </div>
    </button>
  </div>

  <SnsHeader
    class="absolute top-[114px] right-10 md:top-[160px] md:right-[50px]"
    variant="black"
  />

  <div
    class="ml-6 mb-10 md:mb-0 md:ml-0 w-[168px] md:w-[316px] -translate-y-[50px] md:-translate-y-0 md:absolute md:top-[188px] md:left-[50%] md:-translate-x-1/2 lg:-translate-x-0 lg:top-[92px] lg:left-[81px]"
  >
    <Logo class="text-black h-[64px] md:h-[124px] w-[166px] md:w-[316px]" />
  </div>

  <div
    class="max-w-4xl mx-6 mb-10 md:mb-0 md:mx-0 md:absolute md:top-[35%] md:left-[81px]"
  >
    <div class="grid grid-cols-1 md:grid-cols-2 gap-5 md:gap-7" id="menu-items">
      {menu.map((item) => <MenuItem {...item} />)}
    </div>
  </div>

  <div
    class="flex flex-col md:flex-row justify-end gap-4 mx-6 md:gap-3 md:absolute md:top-[84px] md:bottom-0 md:left-0 md:right-[149px] md:max-h-[72px]"
  >
    <div
      class="bg-smoke-white pt-3 pb-5 px-6 md:fixed md:bottom-20 md:right-4 md:w-[368px] pt"
    >
      <MainButton
        title="wedding"
        description="美食と絶景のオーベルジュウェディング"
        link="/wedding"
        variant="black"
        buttonClass="text-black border-b border-black pb-3"
        descriptionClass="text-[10px] heading-[14px] md:text-[11px] md:heading-[16px]"
      />
    </div>
    {
      !isRestaurant
        ? (actionButtons as MainButtonItem[]).map((item) => (
            <MainButton
              {...item}
              class="md:max-w-[223px]"
              buttonClass="text-black px-4 py-2 md:px-[12px] md:py-[6px] border border-black"
              descriptionClass="text-[10px] heading-[14px] md:text-[9px] md:heading-[13px]"
            />
          ))
        : (actionButtons as ActionButtonItem[]).map((item) => (
            <ActionButton {...item} />
          ))
    }
  </div>

  <!-- Copyright -->
  <div
    class="hidden md:block md:absolute md:bottom-[101px] md:left-[81px] text-[13px] heading-[24px] text-black font-URWClassico"
  >
    © les quatre saisons
  </div>
</div>

<script>
  // Global smooth scroll function with 100px offset
  function handleSmoothScrollToHash(hash: string) {
    if (hash) {
      // Remove the hash from URL temporarily to prevent immediate jump
      window.history.replaceState({}, "", window.location.pathname);

      // Wait a bit for the page to fully render
      setTimeout(() => {
        const target = document.getElementById(hash.slice(1));
        if (target) {
          const targetPosition = target.offsetTop - 100; // 100px offset from top
          window.scrollTo({
            top: targetPosition,
            behavior: "smooth",
          });
          // Restore the hash in URL
          window.history.replaceState({}, "", window.location.pathname + hash);
        }
      }, 100);
    }
  }

  // Make function globally available
  (window as any).handleSmoothScrollToHash = handleSmoothScrollToHash;

  // Global hash link handler for all links on the page
  function setupGlobalHashLinkHandler() {
    document.addEventListener("click", function (event) {
      const target = event.target as HTMLElement;
      const clickedLink = target?.closest("a");

      if (clickedLink) {
        const href = clickedLink.getAttribute("href");

        // Check if it's a hash link on the current page
        if (href && href.includes("#")) {
          const [pathname, hash] = href.split("#");
          const currentPath = window.location.pathname;

          // If it's the same page or just a hash
          if (!pathname || pathname === currentPath) {
            event.preventDefault(); // Prevent default link behavior
            handleSmoothScrollToHash("#" + hash);
          }
        }
      }
    });
  }

  // Handle hash on page load
  function handleInitialHash() {
    const hash = window.location.hash;
    if (hash) {
      handleSmoothScrollToHash(hash);
    }
  }

  // Initialize everything
  document.addEventListener("DOMContentLoaded", function () {
    // Setup global hash link handling
    setupGlobalHashLinkHandler();

    // Handle initial hash on page load
    handleInitialHash();

    // Menu-specific: Close menu when menu items are clicked
    const menuItems = document.getElementById("menu-items");
    if (menuItems) {
      menuItems.addEventListener("click", function (event) {
        const target = event.target as HTMLElement;
        const clickedLink = target?.closest("a");

        if (clickedLink) {
          // Close the menu
          const menu = document.getElementById("menu");
          if (menu) {
            menu.classList.add("-translate-y-full");
          }
        }
      });
    }
  });

  // Also handle when page is already loaded
  if (document.readyState !== "loading") {
    setupGlobalHashLinkHandler();
    handleInitialHash();
  }
</script>
