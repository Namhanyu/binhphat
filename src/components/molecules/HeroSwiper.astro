---
interface Props {
  images: Array<{
    src: string;
    alt?: string;
    class?: string;
    srcSet?:
      | {
          src: string;
          media: string;
        }[]
      | undefined;
    objectPosition?: string;
  }>;
  autoPlay?: boolean;
  interval?: number;
  height?: string;
  loop?: boolean;
  effect?: "slide" | "fade";
  className?: string;
  imageClass?: string;
  paginationClass?: string;
  showPagination?: boolean;
}

const {
  images = [],
  autoPlay = true,
  interval = 5000,
  height = "h-100",
  loop = true,
  effect,
  className = "",
  imageClass = "",
  paginationClass = "justify-center",
  showPagination = false,
} = Astro.props;

const swiperId = `hero-swiper-${Math.random().toString(36).slice(2, 11)}`;
---

<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css"
/>

<script
  is:inline
  src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

<script
  is:inline
  define:vars={{ swiperId, autoPlay, interval, loop, effect, showPagination }}
>
  (function () {
    function initSwiperWhenReady() {
      // @ts-ignore
      if (typeof Swiper === "undefined") {
        setTimeout(initSwiperWhenReady, 100);
        return;
      }

      const container = document.getElementById(`container-${swiperId}`);

      if (!container) {
        console.error("Swiper container not found");
        return;
      }

      try {
        // @ts-ignore
        new Swiper(`#${swiperId}`, {
          direction: "horizontal",
          loop: loop,
          effect: effect || "fade",
          crossFade: true,
          speed: 3000,
          spaceBetween: 0,
          centeredSlides: true,

          autoplay: autoPlay
            ? {
                delay: interval,
                disableOnInteraction: false,
                pauseOnMouseEnter: false,
              }
            : false,

          keyboard: {
            enabled: false,
            onlyInViewport: false,
          },

          touchRatio: 1,
          touchAngle: 45,
          grabCursor: true,

          lazy: {
            loadPrevNext: true,
          },

          ...(showPagination
            ? {
                pagination: {
                  el: `#${swiperId}-pagination`,
                  clickable: true,
                },
              }
            : {}),
        });
      } catch (error) {
        console.error("Failed to initialize Swiper:", error);
      }
    }

    if (document.readyState === "loading") {
      document.addEventListener("DOMContentLoaded", initSwiperWhenReady);
    } else {
      initSwiperWhenReady();
    }
  })();
</script>

<div
  class={`relative ${height} overflow-hidden shadow-lg group ${className}`}
  id={`container-${swiperId}`}
>
  <div class="swiper h-full" id={swiperId}>
    <div class="swiper-wrapper">
      {
        images.map((image, index) => (
          <div class="swiper-slide relative">
            <picture>
              {image?.srcSet?.map((set) => (
                <source srcset={set.src} media={set.media} />
              ))}

              <img
                src={image.src}
                alt={image.alt}
                class={`swiper-lazy swiper-img w-full h-full object-cover ${image.class} ${image.objectPosition || "object-center"}  ${imageClass}`}
                loading={index === 0 ? "eager" : "lazy"}
              />
            </picture>
          </div>
        ))
      }
    </div>

    {
      showPagination && (
        <div
          class={`swiper-pagination absolute left-0 bottom-0 z-10 flex items-center gap-1 px-[64px] pb-[30px] ${paginationClass}`}
          id={`${swiperId}-pagination`}
        />
      )
    }
  </div>
</div>
