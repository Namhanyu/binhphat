---
interface Props {
  title: string;
  subTitle?: string;
  content: string | string[];
  imageSrc: string | string[];
  imageClass?: string;
  contentClass?: string;
  reverse?: boolean;
  uniformStyle?: boolean;
  sectionClass?: string;
  showDivider?: boolean;
  menuColor?: string;
}

const {
  title,
  content,
  imageSrc,
  reverse = false,
  uniformStyle = false,
  sectionClass,
  imageClass,
  contentClass,
  showDivider = false,
  subTitle,
  menuColor = "white",
} = Astro.props as Props;

let images: Array<{
  src: string;
  alt?: string;
}> = [];

if (Array.isArray(imageSrc)) {
  images = imageSrc.map((src) => ({ src, alt: title }));
} else if (typeof imageSrc === "string" && imageSrc) {
  images = [{ src: imageSrc, alt: title }];
}

import HeroSwiper from "../molecules/HeroSwiper.astro";
---

<section
  class={`introduction-section grid grid-cols-1 lg:grid-cols-2 text-black gap-[50px] lg:gap-0 ${sectionClass}`}
  data-menu-color={menuColor}
>
  <div
    class={`ps-[39px] pe-[39px] py-0 ${contentClass} ${reverse ? "order-2 lg:order-2 lg:ps-[120px] lg:pe-[128px] lg:py-[71px]" : "order-2 lg:order-1 lg:ps-[128px] lg:pe-[111px] lg:py-[66px]"}`}
  >
    {
      title && (
        <h2 class="text-[19px] lg:text-[27px] leading-[39px] whitespace-pre-line">
          {title}
        </h2>
      )
    }

    {
      showDivider && (
        <div class="border-t border-black mt-[25px] lg:mt-[35px] w-[45.5px]" />
      )
    }

    {
      subTitle && (
        <h3 class="text-[15px] lg:text-[20px] leading-[26px] lg:leading-[29px] lg:mt-[35px] mt-[25px]">
          {subTitle}
        </h3>
      )
    }

    {
      Array.isArray(content) ? (
        content.map((text) => (
          <p
            class={`text-[13px] lg:text-[14px] leading-[28px] lg:leading-[33px] whitespace-pre-line ${title ? "pt-[40px] lg:pt-[55px]" : "pt-0"}`}
            set:html={text}
          />
        ))
      ) : (
        <p
          class={`text-[13px] lg:text-[14px] leading-[28px] lg:leading-[33px] whitespace-pre-line ${title ? "pt-[40px] lg:pt-[55px]" : "pt-0"}`}
          set:html={content}
        />
      )
    }
  </div>

  <div
    class={`lg:h-[490px]  lg:pe-0 flex flex-col justify-center ${reverse ? "order-1 lg:order-1" : "order-1 lg:order-2"} ${uniformStyle ? "ps-[39px]" : "pe-[39px]"}`}
  >
    {
      images.length > 1 ? (
        <HeroSwiper
          className="w-full h-full object-cover object-center"
          images={images}
          imageClass={imageClass}
          showPagination={false}
        />
      ) : (
        images[0] && (
          <img
            src={images[0].src}
            alt={images[0].alt}
            class={`w-full h-full object-cover object-center ${imageClass}`}
          />
        )
      )
    }
  </div>
</section>
