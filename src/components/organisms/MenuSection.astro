---
interface Props {
  title: string;
  subtitle: string;
  openHours: string;
  closeHours: string;
  lastOrder: string;
  imageSrc: string;
  changeColor?: boolean;
  handlePositionImg?: boolean;
  items: Array<{
    name: string;
    description: string;
    price: string;
  }>;
  actions: Array<{
    label: string;
    title: string;
    link?: string;
  }>;
  imageClass?: string;
  menuColor?: string;
}

const {
  title,
  subtitle,
  openHours,
  closeHours,
  lastOrder,
  imageSrc,
  changeColor = false,
  handlePositionImg = false,
  items,
  actions,
  menuColor = "white",
} = Astro.props as Props;

import MainButton from "../molecules/MainButton.astro";
---

<section
  class={`menu-section flex flex-col lg:flex-row justify-between w-full lg:h-[895px] bg-cover ${changeColor ? "text-black" : "text-white"} ${handlePositionImg ? "bg-[center_-90px]" : "bg-center"}`}
  style={`background-image: url(${imageSrc}); `}
  data-menu-color={menuColor}
>
  <div class="pt-[80px] pb-0 lg:py-[117px] px-[39px] lg:px-[129px]">
    <h1
      class="text-[35px] lg:text-[43px] leading-[49px] lg:leading-[61px] pb-[20px] lg:pb-[16px] font-URWClassico"
    >
      {title}
    </h1>
    <p
      class="text-[15px] lg:text-[17px] leading-[32px] lg:leading-[27px] pb-[40px] lg:pb-[33px]"
    >
      {subtitle}
    </p>
    <div class="text-[16px] font-URWClassico leading-[22px]">
      <p class="pb-[10px]">open {openHours}</p>
      <div class="flex items-center gap-[12px]">
        <span
          class={`w-[28px] border-t ${changeColor ? "border-black" : "border-white"}`}
        ></span>
        <div>
          close {closeHours}
          <span class="text-[11px] leading-[15px]">(l.o {lastOrder})</span>
        </div>
      </div>
    </div>
  </div>

  <div
    class={`relative flex flex-col gap-[100px] lg:gap-[121px] bg-opacity-50 ps-[40px] lg:ps-[80px] pe-[40px] lg:pe-[158px] py-[50px] lg:py-[83px] mb-[60px] mt-[36px] lg:my-[34px] ms-[20px] lg:ms-0 rounded-l-[50px] shadow-lg ${changeColor ? "bg-[#FCFCFC]" : "bg-[#070707]"}`}
  >
    <ul class="flex flex-col gap-[38px] lg:gap-[39px]">
      {
        items.map((item) => (
          <li class="menu-item flex justify-between items-center lg:items-start gap-[56px]">
            <div class="lg:min-w-[202px]">
              <p class="text-[16px] lg:text-[14px] leading-[24px] font-URWClassico">
                {item.name}
              </p>
              <p class="text-[13px] leading-[24px]">{item.description}</p>
            </div>
            <p class="text-[18px] lg:text-[14px] leading-[27px] font-URWClassico">
              {item.price} -
            </p>
          </li>
        ))
      }
    </ul>

    <nav class="flex flex-col gap-[50px] lg:gap-[38px] w-[240px] lg:w-auto">
      {
        actions.map((action) => (
          <MainButton
            title={action.title}
            link={action.link}
            description={action.label}
            showLine={false}
            buttonClass={` border-b pb-[15px] flex flex-col gap-[2px] ${changeColor ? "text-black border-black" : "text-white border-white"}`}
            descriptionClass="text-[11px] leading-[16px]"
          />
        ))
      }
    </nav>

    <div
      class={`absolute rotate-90 right-[-44px] flex items-center gap-[14px] ${changeColor ? "top-[-175px] lg:top-[125px]" : "top-[-175px] lg:top-[106px]"}`}
    >
      <div class="flex items-center gap-[4px] lg:gap-[15px]">
        <span
          class={`text-[11px] lg:text-[15px] leading-[50px] font-URWClassico ${changeColor ? "text-black" : "text-white"}`}
        >
          {title}
        </span>
        <div
          class={`w-[89px] lg:w-[145px] border-t ${changeColor ? "border-black" : "border-white"}`}
        >
        </div>
      </div>
    </div>
  </div>
</section>
