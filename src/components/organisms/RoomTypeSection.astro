---
import ReadMore from "../atoms/ReadMoreButton.astro";
import HeroSwiper from "../molecules/HeroSwiper.astro";

interface Props {
  imageSrc: string | string[];
  reverse?: boolean;
  no: string;
  title?: string;
  titleJa?: string;
  description?: string;
  checkin?: string;
  checkout?: string;
  floorPlan?: boolean;
  roomSize?: string;
  capacity?: string;
  bedType?: string;
  paginationClass?: string;
}

const {
  imageSrc,
  reverse = false,
  no,
  title,
  titleJa,
  description,
  checkin,
  checkout,
  floorPlan = false,
  roomSize,
  capacity,
  bedType,
  paginationClass,
} = Astro.props as Props;

let images: Array<{
  src: string;
  alt?: string;
}> = [];

if (Array.isArray(imageSrc)) {
  images = imageSrc.map((src) => ({ src, alt: "room type" }));
} else if (typeof imageSrc === "string" && imageSrc) {
  images = [{ src: imageSrc, alt: "room type" }];
}
---

<section class="room-type-section room-card">
  <div
    class={`facility-image ${reverse ? "lg:pr-[128px] pr-[39px]" : "lg:pl-[128px] pl-[39px]"}`}
  >
    {
      images.length > 1 ? (
        <HeroSwiper
          images={images}
          showPagination={true}
          imageClass="aspect-[1815:1000] max-h-[682px] 2xl:object-[center_65%] object-contain object-bottom"
          paginationClass={paginationClass}
        />
      ) : (
        images[0] && (
          <img
            src={images[0].src}
            alt={images[0].alt}
            class="w-full aspect-[1815:1000]"
          />
        )
      )
    }
  </div>

  <div class="room-detail lg:mt-[59px] mt-[50px] lg:px-[128px] px-[39px]">
    <div class="flex items-center">
      <span
        class="lg:text-[15px] text-[13px] font-URWClassico whitespace-nowrap"
        >room type</span
      >
      <hr class="w-[46px] mx-[10px] lg:mx-[15px] border-t border-black" />
      <span
        class="lg:text-[15px] text-[13px] font-URWClassico whitespace-nowrap"
      >
        {no}
      </span>
    </div>

    {
      title && (
        <div class="lg:mt-[40px] mt-[30px]">
          <div class="grid grid-cols-1 lg:grid-cols-2 lg:gap-[148px] gap-[50px]">
            <div>
              <div class="flex w-full justify-between items-start lg:flex-row flex-col">
                <div>
                  <div class="lg:text-[43px] text-[35px] font-URWClassico lg:mb-[15.5px] mb-[20px] leading-none">
                    {title}
                  </div>
                  {titleJa && (
                    <p class="lg:text-[17px] text-[15px]">{titleJa}</p>
                  )}
                </div>
                {(checkin || checkout) && (
                  <div class="flex flex-col lg:mt-0 my-[40px] font-URWClassico leading-none">
                    {checkin && (
                      <div class="flex justify-between items-center min-w-[120px]">
                        <span class="lg:text-[13px] text-[16px]">checkin</span>
                        <span class="lg:text-[13px] text-[16px]">
                          {checkin}
                        </span>
                      </div>
                    )}

                    <hr class="w-full border-t my-[11.5px] border-black" />

                    {checkout && (
                      <div class="flex justify-between items-center min-w-[120px]">
                        <span class="lg:text-[13px] text-[16px]">checkout</span>
                        <span class="lg:text-[13px] text-[16px]">
                          {checkout}
                        </span>
                      </div>
                    )}
                  </div>
                )}
              </div>

              {description && (
                <p class="lg:mt-[74px] lg:text-[14px] text-[13px] leading-[28px] lg:leading-[33px] whitespace-pre-line">
                  {description}
                </p>
              )}
            </div>

            <div class="flex lg:justify-end">
              {floorPlan && (
                <div class="border border-black lg:w-[461px] lg:h-[272px] w-full h-[184px] flex items-center justify-center">
                  <div class="text-center font-bold">
                    <p class="lg:text-[17px] text-[11px] lg:leading-[27px]">
                      客室図面
                    </p>
                    <p class="lg:text-[17px] text-[11px]">※新規作成</p>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      )
    }
  </div>

  <div
    class="flex justify-between lg:flex-row flex-col-reverse lg:mt-[59px] mt-[50px] lg:px-[128px] px-[39px]"
  >
    <div class="lg:self-end lg:mt-0 mt-[80px]">
      <div class="mb-[6px] lg:mb-[9px] text-[11px]">ご予約</div>
      <ReadMore link="#" text="reservation" />
    </div>
    <div>
      {
        (roomSize || capacity || bedType) && (
          <div>
            {roomSize && (
              <div class="flex justify-between gap-[25px] pb-[11.5px] border-b border-black">
                <span class="lg:text-[13px] text-[12px]">客室の広さ</span>
                <span class="lg:text-[13px] text-[12px]">{roomSize}</span>
              </div>
            )}
            {capacity && (
              <div
                class={`flex justify-between gap-[25px] py-[11.5px] ${bedType ? "border-b border-black" : ""}`}
              >
                <span class="lg:text-[13px] text-[12px]">定員</span>
                <span class="lg:text-[13px] text-[12px]">{capacity}</span>
              </div>
            )}
            {bedType && (
              <div class="flex justify-between gap-[15px] pt-[11.5px] lg:gap-[25px]">
                <span class="lg:text-[13px] text-[12px]">ベッドタイプ</span>
                <span class="lg:text-[13px] text-[12px]">{bedType}</span>
              </div>
            )}
          </div>
        )
      }
    </div>
  </div>
</section>
