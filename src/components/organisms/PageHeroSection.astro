---
import "../../styles/hero-section.css";

import HeroSwiper from "../molecules/HeroSwiper.astro";
import PageLogo from "../molecules/PageLogo.astro";
import SnsHeader from "../molecules/SnsHeader.astro";
import HeroMenu from "./HeroMenu.astro";

interface SrcSet {
  src: string;
  media: string;
}

interface Props {
  images: Array<{
    src: string;
    alt: string;
    class?: string;
    srcSet?: SrcSet[];
  }>;
  indexes?: string | number;
  title: string;
  description: string;
  imgPosition?: string;
  reverse?: boolean;
  textColor?: string;
  isRestaurant?: boolean;
  theme?: string;
  menuTextColor?: string;
  bgMenuColor?: string;
  menuColor?: string;
}

const {
  images = [],
  indexes,
  title,
  description,
  imgPosition,
  reverse = false,
  isRestaurant = false,
  textColor = "white",
  theme,
  menuTextColor = "default",
  bgMenuColor = "default",
  menuColor = "white",
} = Astro.props;

const useSlider = images.length > 1;
---

<section
  class={`page-hero-section relative w-full min-h-screen flex items-center justify-center bg-white hero-section-${theme} ${isRestaurant ? "max-md:min-h-[1164px]" : ""}`}
  data-menu-color={menuColor}
>
  {
    !isRestaurant && (
      <div class="absolute top-[40px] right-[150px] z-[4] max-md:left-[80px] max-md:top-[60%] max-md:min-width-[80vw] max-md:w-[max-content] max-sm:left-[25px]">
        <HeroMenu textColor={menuTextColor} bgColor={bgMenuColor} />
      </div>
    )
  }

  <div class="absolute inset-0 w-full h-full">
    {
      useSlider ? (
        <HeroSwiper
          className="w-full h-full object-cover object-center"
          images={images}
        />
      ) : (
        <picture>
          {images[0]?.srcSet?.map((set) => (
            <source srcset={set.src} media={set.media} />
          ))}
          <img
            src={images[0]?.src}
            alt={images[0]?.alt ?? ""}
            class={`w-full h-full object-cover ${images[0]?.class} ${imgPosition}`}
            draggable="false"
          />
        </picture>
      )
    }
  </div>
  <div
    class="page-hero-content absolute z-10 flex flex-col items-start h-fit px-8 py-16 max-w-[400px] top-[5rem] md:top-[8rem] left-[9%]"
  >
    <div class="flex flex-col items-start mb-2">
      {
        indexes && (
          <span
            class={`font-URWClassico text-[15px] md:text-[20px] leading-[18px] md:leading-[24px] tracking-[0.05em] text-${textColor}`}
          >
            {indexes}
          </span>
        )
      }

      <div
        class={`flex items-center gap-[9px]${reverse ? " flex-row-reverse" : ""}`}
      >
        <span class={`w-12 border-t border-${textColor} opacity-60 mt-1`}
        ></span>
        <span
          class={`text-${textColor} text-sm tracking-[0.05em] font-URWClassico`}
        >
          about
        </span>
      </div>
    </div>
    <h1
      class={`text-${textColor} text-[43px] md:text-[50px] max-md:tracking-[0.05em] leading-[52px] md:leading-[61px] font-URWClassico mb-4 ml-[20px] drop-shadow-lg`}
    >
      {title}
    </h1>
    <p
      class={`text-${textColor} text-base font-light leading-relaxed drop-shadow mb-4 ml-[20px]`}
    >
      {description}
    </p>
  </div>
</section>

<SnsHeader
  class="absolute top-[114px] right-10 md:top-[115px] md:right-16 z-20"
/>

<PageLogo />
